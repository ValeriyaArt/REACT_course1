{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/login/Login.js"],"names":["FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","Object","C_Users_User_easy_react_REACT_course1_my_app_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","name","validators","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","module","exports","formSummaryError","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","concat","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_2__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7__","_common_FormsControls_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_7___default","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","style","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"kPAIaA,EAAc,SAAAC,GAA+CA,EAA7CC,MAA6C,IAAAC,EAAAF,EAAtCG,KAAOC,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,MAAQC,EAAcN,EAAdM,SAClDC,EAAWH,GAAWC,EAC5B,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,YAAc,KAAON,EAAWK,IAAOP,MAAQ,MAClEG,EAAAC,EAAAC,cAAA,WACKJ,GAEJC,GAAYC,EAAAC,EAAAC,cAAA,YAAOL,KAKnBS,EAAW,SAACC,GAAU,IACxBd,EAA6Bc,EAA7Bd,MAAgBe,GAAaD,EAAtBZ,KADiBc,OAAAC,EAAA,EAAAD,CACKF,EADL,mBAE/B,OACIP,EAAAC,EAAAC,cAACX,EAAgBgB,EACbP,EAAAC,EAAAC,cAAA,WAAAO,OAAAE,OAAA,GAAclB,EAAWe,MAKxBI,EAAQ,SAACL,GAAU,IACrBd,EAA6Bc,EAA7Bd,MAAgBe,GAAaD,EAAtBZ,KADcc,OAAAC,EAAA,EAAAD,CACQF,EADR,mBAE5B,OACIP,EAAAC,EAAAC,cAACX,EAAgBgB,EACbP,EAAAC,EAAAC,cAAA,QAAAO,OAAAE,OAAA,GAAWlB,EAAWe,MAKrBK,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CV,EAA3CW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmD,GAAIG,EAAvDH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA8D,GAA9D,OACvBlB,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAACoB,EAAA,EAADb,OAAAE,OAAA,CAAOG,YAAaA,EACbC,KAAMA,EACNQ,SAAUP,EACVC,UAAWA,GACPV,IAEJP,EAAAC,EAAAC,cAAA,WAAMmB,0BCzCzBG,EAAAC,QAAA,CAAkBpB,YAAA,mCAAAR,MAAA,6BAAA6B,iBAAA,2ECDlBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAA,OAEaG,EAAW,SAAAE,GACpB,IAAIA,EACJ,MAAO,qBAGED,EAAmB,SAACE,GAAD,OAAe,SAACD,GAC5C,GAAIA,EAAMb,OAASc,EAAW,uBAAAC,OAAwBD,EAAxB,gDCRlCN,EAAAQ,EAAAN,GAAA,IAAAO,EAAAT,EAAA,GAAAU,EAAAV,EAAAW,EAAAF,GAAAG,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAA,GAAAkB,EAAAlB,EAAA,KAAAmB,EAAAnB,EAAAW,EAAAO,GA4BME,EAAiBC,YACnB,CACIC,KAAM,SAFSD,CAlBP,SAAAxD,GAA2B,IAAzB0D,EAAyB1D,EAAzB0D,aAAcrD,EAAWL,EAAXK,MAC5B,OACIwC,EAAApC,EAAAC,cAAA,QAAMiD,SAAUD,GACZb,EAAApC,EAAAC,cAAA,WACKW,YAAY,QAAS,QAAS,CAACiB,KAAWlB,KAC1CC,YAAY,WAAY,WAAY,CAACiB,KAAWlB,IAAO,CAACwC,KAAM,aAC9DvC,YAAY,KAAM,aAAc,GAAID,IAAO,CAACwC,KAAM,YAAa,eAC/DvD,GAASwC,EAAApC,EAAAC,cAAA,OAAKC,UAAWkD,IAAM3B,kBAC3B7B,GAELwC,EAAApC,EAAAC,cAAA,WACImC,EAAApC,EAAAC,cAAA,4BAiCLoD,sBANS,SAACC,GAAD,MACpB,CACIC,OAAQD,EAAME,KAAKD,SAKvB,CACIE,WAFOJ,CApBD,SAAC/C,GAKP,OAAIA,EAAMiD,OACCnB,EAAApC,EAAAC,cAAC0C,EAAA,EAAD,CAAUe,GAAI,aAElBtB,EAAApC,EAAAC,cAAA,WACHmC,EAAApC,EAAAC,cAAA,mBACAmC,EAAApC,EAAAC,cAAC6C,EAAD,CAAgBI,SARH,SAACS,GACdrD,EAAMmD,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.04bf0c06.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \" \")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n                   />\r\n                   <div>{text}</div>\r\n        </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__455hm\",\"error\":\"FormsControls_error__3p8j0\",\"formSummaryError\":\"FormsControls_formSummaryError__28hf5\"};","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","import React from \"react\";\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {createField} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nlet LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {createField('Email', 'email', [required], Input)}\r\n                {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n                {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm(\r\n    {\r\n        form: 'login'\r\n    }\r\n)(LoginForm)\r\n\r\nconst Login = (props) =>\r\n    {\r\n        const onSubmit = (formData) => {\r\n            props.login(formData.email, formData.password, formData.rememberMe)\r\n        }\r\n        if (props.isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n        return <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    }\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        login\r\n    }\r\n)(Login)"],"sourceRoot":""}